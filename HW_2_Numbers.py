#!/usr/bin/env python
# coding: utf-8


""" Задание: Написать программу на Python3, которая сначала запрашивает положительное число-основание системы счисления, 
    затем два числа в системе счисления с этим основанием, 
    и потом четвертое число-основание системы счисления, в которой надо вывести результат. 
    В ходе выполнения программа возвращает результат сложения двух чисел в требуемой системе счисления. 
    Нельзя использовать для перевода функцию int().
    """

import string
digits_set = string.digits + string.ascii_uppercase #получаем набор из цифр и букв

def to_decimal(system_in: int, num: str) -> int:
    """
    Перевод из заданной системы счисления в десятичную.
    Запрашивает основание системы счисления и число в этой системе.
    """
    num_decimal = 0

    for count, value in enumerate(num): # имеем сразу готовый итератор
        num_decimal += digits_set.index(value) * (system_in ** (len(num) - count - 1))
    return num_decimal


def from_decimal(system_out: int, num: int) -> str:
    """
    Перевод из десятичной системы счисления в заданную.
    Запрашивает основание системы счисления и число в этой системе.
    """
    result = ''
    
    while num:
        result += digits_set[num % system_out] #делим число на основание системы, сохраняя остатки
        num //= system_out # делим пока результат деления не будет меньше делителя
    return result[::-1] # предварительно переворачиваем строку (т.к. результат справа налево сохранялся)


def addition(syst_1: str, num_1: str, num_2: str, syst_2: str) -> str:
    """
    Непосредственно функция сложения.
    Принимает на вход основание системы счисления,
    затем два числа в этой системе,
    затем основание системы счисления, в которой нужно вывести результат.
    """
    numbers_sum = to_decimal(syst_1, num_1.upper()) + to_decimal(syst_1, num_2.upper())
    return from_decimal(syst_2, numbers_sum)




